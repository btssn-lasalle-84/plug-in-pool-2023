class GestionManche
!!!135346.java!!!	GestionManche(in joueur1 : String, in joueur2 : String, in premierJoueur : int)
        joueurs = new String[2];
        joueurs[0] = joueur1;
        joueurs[1] = joueur2;
        couleursJoueurs= new HashMap<>();

        billes = new HashMap<>();
        billes.put(ROUGE, NB_BILLES_COULEUR);
        billes.put(JAUNE, NB_BILLES_COULEUR);
        poches = new ArrayList[6];
        manche = new ArrayList<ArrayList<Integer>>();
        manche.add(new ArrayList<Integer>());
        for (int poche = 0; poche < NB_POCHES; poche++) {
            this.poches.add(new ArrayList());
        }
        joueurActif = 1;
        couleursDefinies = false;
        mancheDemarree = false;
        compteur = new Compteur();
        //!< @todo affichage activitée
!!!135474.java!!!	interpreterTrame(in trame : int) : void
        if(trame / 128 == 0)
        {
            if(trame % 4 == 0)
            {
                if (couleursDefinies && billes.get(couleursJoueurs.get(joueurs[joueurActif])) == 0)
                {
                    //!< @todo JoueurActif a gagné
                }
                else
                {
                    //!< @todo joueurActif a perdu
                }
            }
            else
            {
                manche.get(manche.size() - 1).add(trame % 4);
                if(!couleursDefinies && trame % 3 != 0);
                {
                    couleursDefinies = true;
                    couleursJoueurs.put(joueurs[joueurActif], trame % 4);
                    couleursJoueurs.put(joueurs[(joueurActif + 1) % 2], (trame % 4) * 2 % 3);
                }
            }
        }
        else if(! mancheDemarree)
        {
            mancheDemarree = true;
            compteur.restart();
        }
        else
        {
            manche.add(new ArrayList<Integer>());
            joueurActif = (joueurActif + 1) % 2;
            compteur.restart();
        }
